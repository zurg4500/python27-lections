"===================================Списки/list====================================="
# список - это изменяемый, итерируемый, индексируемый и упорядоченный тип данных, предназначенный для хранения элементов в строгом порядке.
#list1 = [1, 3, 4, 'sabre', [1,2,3], None, True, False] # - в list1 можно хранить любые типы данных
#list1[0] # 10
#list1[3] # [1,2,3]
#sublist = list1[3] # [1,2,3] 
#list1[3][-1] # 3 - обращение по индексу в данном случае 3 под индексом [-1]
#list1[-1] # False - обращение к переменной list1 по индексу, в данном случае по индексу [-1] = False
#[list1[-2][-1] # 'e'
#list2 = list('hello123')
#print(list2) # ['h', 'e', 'l', 'l', 'o', '1', '2', '3']
#print(list('567')) #['h', 'e', 'l', 'l', 'o', '1', '2', '3']
#                    ['5', '6', '7']  
#list3 = list(range(3,10,2)) # range 3 - задает с чего начать шаг, 10 до какого числа, а 2 задает с каким шагом
#print(list3) # [3, 5, 7, 9]
#print(list(range(5))) # [0, 1, 2, 3, 4]

"------------------------------изменяемость------------------------------"
#string = 'hello'
#res = string.upper()
#print(string) # 'hello'
#string(res) # 'HELLO'

#list1 = []
#list1.append(1) # 1 .append - обращается к адресу  хранения ячейки list1
#list1.append('b') # 'b' .append - обращается к адресу  хранения ячейки list1, изменяя\добавляя к нему 'b'
#list1.append([0]) # [0] .append - обращается к адресу  хранения ячейки list1, изменяя\добавляя к нему еще [0]
#print(list1)

"======================================Методы списков=================================="
# append - метод, который добавляет элемент в конец списка
# литералы списков использует только квадратные скобки - []
# append - метод, который добавляет элемент в конец списка
#list1 = []
#list1.append('hello')
#list1.append(500)
#list1.append([1,2,3])
#print(list1) # ['hello', 500, [1,2,3]]

# remove - метод, который удаляет элемент из списка по значению, но только первый элемент из списка и выдаст ошибку если такого элемента нет
#list2 = ['hello', 500, 'world', 1000, 'hello', 500]
#list2.remove('hello') # [500, 'world', 1000, 'hello', 500] - remove удаляет только один 'hello'
#print(list2)

# pop - метод, который удаляет из списка по индексу, если этот индекс отсуствует выдаст ошибку Index Error
#list3 = [10, 20, 30, 40, 50]
#list3.pop() # [10, 20, 30, 40] - пустой pop() удаляет с конца
#print(list3) 
#list3 = [10, 20, 30, 40, 50]
#list3.pop(0) # [20, 30, 40, 50] - удаляет по порядку начиная с 0
#print(list3)

# также метод pop возвращает удаленный элемент выводя в терминал, но не в список
#list4 = [10, 20, 30, 40, 50]
#popped = list4.pop(0) # [20, 30, 40, 50]
#print(list4)
#print(popped) # [20, 30, 40, 50]
               # 10


#list5 = []
#list5.pop() # Index Error выдает ошибку при попытке удалить пустой элемент

# insert - метод, который добавляет элемент в список по индексу
#list5 = [1,2,3,4]
#list5.insert(0, 'hello') # 0 - номер индекса добавляемого элемента
#print(list5) # ['hello', 1, 2, 3, 4]

# создайте список с числами от 1 до 10
# выведите списко с 1 до 10 в обратном порядке
#list1 = [1,2,3,4,5,6,7,8,9,10]
#list1 = list(range(1,11))
#print(list1[::1])
#list.reverse()
#print(list(reversed(list1)))

#str="1 2 3 4 5 6 7 8 90 200" 
#slicedString = str[::-1] - абсолютно переворачивает список
#print(slicedString) # 002 09 8 7 6 5 4 3 2 1

#list1 = [1,2,3]
#list1.clear() - # чистить список полностью
#print(list1) # []

# count - считает кол-во элементов, кооторый передаем метот в списке
#list1 = [1,2,3,4,1,2,1,4,1,6]
#list1.count(1) # 4
#list1.count(6) # 6

#list1 = ['hello', 'hello', 'hello']
#list1.count('hello')
#list1.count('l') # 0 - элементов 'l' нет по порядку, но не в самих 'hello'

# index - возравращет индекс данного элемента
#list2=['hello', 'world', 'makers']
#ind = list2.index('hello')
#print(ind) # 0
#list2.index('makers')
#print(ind) # 2

# sort - метод сортирования по возрастанию, при этом цифры и буквы если сортировать одновременно и выдает ошибку
#list3 = [32,15,12]
#list3.sort()
#print(list3) # [12,15,32]

#list3 = ['a', 'B', 'c']
#list3.sort() 
#print(list3) # ['B', 'a', 'c']

# copy - возвращает копию списка
#list1 = [1,2,3]
#list2 = list1.copy() # создает копию
#list2.append(4) # добавляе 4 к списку
#print(list1) # [1, 2, 3]
#print(list2) # [1, 2, 3]
             # [1, 2, 3, 4]

             